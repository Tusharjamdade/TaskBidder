/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/lQqkU4Vnl4Z
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Archivo } from 'next/font/google'
import { Libre_Franklin } from 'next/font/google'

archivo({
  subsets: ['latin'],
  display: 'swap',
})

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Label } from "../ui/label"
import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "../ui/select"
import { Textarea } from "../ui/textarea"
import { Popover, PopoverTrigger, PopoverContent } from "../ui/popover"
import { Button } from "..//ui/button"
import {Calendar } from "../ui/calendar"
import { Input } from "../ui/input"

export function PostJobUpdated() {
  const [skills, setSkills] = useState([])
  const [newSkill, setNewSkill] = useState("")
  const handleAddSkill = () => {
    if (newSkill.trim() !== "") {
      setSkills([...skills, newSkill.trim()])
      setNewSkill("")
    }
  }
  const handleRemoveSkill = (index) => {
    const updatedSkills = [...skills]
    updatedSkills.splice(index, 1)
    setSkills(updatedSkills)
  }
  return (
    <div className="w-full max-w-3xl mx-auto p-4 sm:p-6 md:p-8">
      <div className="space-y-6">
        <div className="grid gap-2">
          <Label>Job Title</Label>
          <Select>
            <SelectTrigger>
              <SelectValue placeholder="Select job title" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="software-engineering">Software Engineering</SelectItem>
              <SelectItem value="design">Design</SelectItem>
              <SelectItem value="marketing">Marketing</SelectItem>
              <SelectItem value="sales">Sales</SelectItem>
              <SelectItem value="finance">Finance</SelectItem>
            </SelectContent>
          </Select>
        </div>
        <div className="grid gap-2">
          <Label>Location</Label>
          <Select>
            <SelectTrigger>
              <SelectValue placeholder="Select location" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="usa">United States</SelectItem>
              <SelectItem value="canada">Canada</SelectItem>
              <SelectItem value="uk">United Kingdom</SelectItem>
              <SelectItem value="australia">Australia</SelectItem>
              <SelectItem value="germany">Germany</SelectItem>
            </SelectContent>
          </Select>
        </div>
        <div className="grid gap-2">
          <Label>Job Type</Label>
          <Select>
            <SelectTrigger>
              <SelectValue placeholder="Select job type" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="full-time">Full Time</SelectItem>
              <SelectItem value="part-time">Part Time</SelectItem>
            </SelectContent>
          </Select>
        </div>
        <div className="grid gap-2">
          <Label htmlFor="job-description">Job Description</Label>
          <Textarea id="job-description" rows={5} placeholder="Describe the job details" />
        </div>
        <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <div className="grid gap-2">
            <Label htmlFor="deadline">Deadline</Label>
            <Popover>
              <PopoverTrigger asChild>
                <Button variant="outline" className="justify-start">
                  <div className="w-5 h-5 mr-2" />
                  <span id="deadline">Select deadline</span>
                </Button>
              </PopoverTrigger>
              <PopoverContent className="p-0">
                <Calendar />
              </PopoverContent>
            </Popover>
          </div>
          <div className="grid gap-2">
            <Label>Skills</Label>
            <div className="flex items-center gap-2">
              <Input placeholder="Add a skill" value={newSkill} onChange={(e) => setNewSkill(e.target.value)} />
              <Button variant="outline" size="icon" onClick={handleAddSkill}>
                <div className="w-5 h-5" />
              </Button>
            </div>
            <div className="grid gap-2">
              {skills.map((skill, index) => (
                <div key={index} className="flex items-center justify-between">
                  <span className="text-sm font-medium">{skill}</span>
                  <Button variant="ghost" size="icon" onClick={() => handleRemoveSkill(index)}>
                    <div className="w-5 h-5 text-muted-foreground" />
                  </Button>
                </div>
              ))}
            </div>
          </div>
        </div>
        <div className="grid gap-2">
          <Label>Job Image</Label>
          <div className="flex items-center gap-2">
            <Input type="file" />
            <Button variant="outline" size="icon">
              <div className="w-5 h-5" />
            </Button>
          </div>
        </div>
        <div className="flex justify-end">
          <Button type="submit">Post Job</Button>
        </div>
      </div>
    </div>
  )
}
